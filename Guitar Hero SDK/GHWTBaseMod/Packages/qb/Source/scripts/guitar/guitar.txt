Unknown [GHWT_HEADER]SectionInteger show_gpu_time 0SectionInteger output_gpu_log 0SectionInteger show_cpu_time 0SectionInteger show_play_log 0SectionInteger play_log_lines 10SectionInteger show_guitar_tilt 0SectionInteger nxwatson_channels 1SectionInteger output_song_stats 0SectionInteger show_sensor_debug 0SectionInteger guitar_motion_enable_test 0SectionInteger vocal_debug_hud 1SectionInteger roland_drumkit 1SectionInteger rock_meter_debug 0SectionInteger ps2_venues 0SectionQBKey current_song RebelYellSectionQBKey current_difficulty_coop easySectionQBKey current_level load_z_MetalfestSectionQBKey current_highway highwaySectionFloat current_time 0.00000SectionFloat current_deltatime 0.0167000SectionInteger current_starttime 0SectionInteger current_endtime 0SectionInteger current_looppoint -1000000SectionFloat current_speedfactor 1.00000SectionInteger autolaunch_startnow 0SectionInteger Autolaunch_ShowStorageSelector 1SectionQBKey current_song_qpak noneSectionInteger current_song_qpak_performance 0SectionQBKey current_transition noneSectionQBKey debug_current_transition noneSectionInteger current_num_players 1SectionInteger in_join_band_screens 0SectionInteger num_players_finished 0SectionInteger guitar_fretbar_divisions 2SectionInteger drum_fretbar_divisions 2SectionInteger disable_band 0SectionInteger disable_crowd 0SectionInteger disable_note_input 0SectionInteger tutorial_disable_hud 0SectionInteger is_network_game 0SectionInteger net_ready_to_start 0SectionQBKey rich_presence_context presence_menusSectionQBKey game_mode p1_quickplaySectionInteger skip_boot_menu 0SectionInteger autolaunch_cas 0SectionInteger autolaunch_cas_soak_test 0SectionInteger autolaunch_jam 0SectionInteger skip_signin 0SectionInteger show_movies 1SectionInteger is_demo_mode 0SectionInteger is_multiplayer_beta 0SectionInteger downloadcontent_enabled 0SectionQBKey input_mode recordSectionInteger replay_suspend 1SectionInteger songtime_paused 0SectionInteger drum_solo_songtime_paused 0SectionFloat drum_solo_length 0.00000SectionInteger drum_solo_no_gems 0SectionStruct drum_rock_meter_weights{	StructHeader	{		StructArray easy_rhythm		{			ArrayFloat			[				1.00000				1.00000			]		}		StructArray easy		{			ArrayFloat			[				1.00000				1.00000			]		}		StructArray MEDIUM		{			ArrayFloat			[				1.50000				1.50000			]		}		StructArray hard		{			ArrayFloat			[				2.00000				2.50000			]		}		StructArray expert		{			ArrayFloat			[				2.00000				2.50000			]		}	}}SectionQBKeyString current_boss Boss_Ted_PropsSectionInteger boss_battle 0SectionInteger boss_controller 0SectionInteger boss_oldcontroller 0SectionInteger boss_pattern 0SectionInteger boss_strum 0SectionInteger boss_lastwhammytime 0SectionInteger boss_lastbrokenstringtime 0SectionInteger faceoff_enabled 0SectionInteger input_debug_display 0SectionInteger display_debug_input 0SectionInteger output_log_file 0SectionInteger practice_start_time 0SectionInteger practice_end_time 0SectionInteger practice_loop_section 0SectionQBKey startup_song RebelYellSectionQBKey startup_difficulty easySectionFloat time_audio_offset 0.00000SectionFloat time_gem_offset 0.00000SectionFloat time_input_offset 0.00000SectionFloat time_drum_midi_offset 0.00000SectionFloat time_gem_offset_with_lag 0.00000SectionFloat time_drum_midi_offset_with_lag 0.00000SectionFloat crowd_band_multiplier 1.00000SectionInteger max_num_powerups 3SectionInteger show_battle_text 1SectionInteger devil_finish 0SectionInteger battle_do_or_die 0SectionFloat battle_do_or_die_speed_scale 1.00000SectionFloat battle_do_or_die_attack_scale 1.00000SectionInteger Cheat_Line6Unlock -1SectionInteger Cheat_AlwaysSlide -1SectionInteger Cheat_SuperUser -1SectionInteger cheat_airinstruments -1SectionInteger Cheat_InvisibleCharacters -1SectionInteger Cheat_SnobCrowd -1SectionInteger cheat_performancemode -1SectionInteger Cheat_HyperSpeed -1SectionInteger Cheat_AutoKick -1SectionInteger Cheat_UnlockQuickplay -1SectionInteger Cheat_UnlockATTBallpark -1SectionInteger Cheat_GemColor -1SectionInteger Cheat_FlameColor -1SectionInteger Cheat_StarColor -1SectionInteger Cheat_BestBuyKid -1SectionInteger cheat_vocalfireball -1SectionInteger Cheat_BucketHat -1SectionInteger Cheat_EuroContestWinner -1SectionInteger Cheat_Rina -1SectionInteger Cheat_Aaron -1SectionFloat original_check_time_early 0.00000SectionFloat original_check_time_late 0.00000SectionInteger boss_wuss_out 0SectionQBKey crowd_model_array noneSectionFloat failed_song_time 0.00000SectionQBKey current_section_array noneSectionInteger current_section_array_entry 0SectionFloat last_time_in_lead 0.00000SectionInteger last_time_in_lead_player -1SectionInteger enable_saving 1SectionInteger primary_controller 0SectionInteger primary_controller_assigned 0SectionInteger invite_controller -1SectionInteger streamall_fsb_index -1SectionInteger enable_debug_menus 1SectionInteger whammy_mania_achievement_invalidated 0SectionFloat vocalist_height 1.60000SectionInteger winning_player_camera_percentage 100SectionQBKey cas_heap_state in_gameSectionInteger playerserver_frame_lag 0SectionStruct guest_character_names{	StructHeader {}}SectionStruct guest_character_fullnames{	StructHeader {}}SectionInteger num_quickplay_song_list 0SectionInteger quickplay_song_list_current 0SectionArray quickplay_song_list{	ArrayQBKey	[		null		null		null		null		null		null	]}Script reset_quickplay_song_list 0xc7db9410 [	:i $change$${StructInt quickplay_song_list_current = -1}$
	:i $GetArraySize$${StructQBString quickplay_song_list}$
	:i $i$ = %i(0)
	:i while 
	:i $SetArrayElement$$ArrayName$ = $quickplay_song_list$$globalarray$$index$ = %GLOBAL%$i$$newvalue$ = $null$
	:i %GLOBAL%$i$ = (%GLOBAL%$i$ + %i(1))
	:i loop_to %GLOBAL%$array_size$
	:i endfunction]SectionQBKey sysnotify_menus_position toprightSectionQBKey sysnotify_ingame_position toprightSectionInteger CameraCuts_EnableVideoVenueCams 0Script get_heap_sizes 0x16a0812e [
	:i $GetPlatform$
	:i switch %GLOBAL%$Platform$
		:i case $Xenon$
			:i %GLOBAL%$heap_size_globalpak$ = (%i(31) * %i(1024) * %i(1024))
			:i %GLOBAL%$heap_size_globalpak_vram$ = %i(0)
			:i %GLOBAL%$heap_size_audio$ = (%i(48) * %i(1024) * %i(1024))
			:i %GLOBAL%$heap_size_audio_vram$ = %i(0)
			:i %GLOBAL%$heap_size_drumkitaudio$ = (%i(2) * %i(1024) * %i(1024))
			:i %GLOBAL%$heap_size_drumkitaudio_vram$ = %i(0)
			:i %GLOBAL%$heap_size_lightshow$ = (%i(800) * %i(1024))
			:i %GLOBAL%$heap_size_musician$ = (%i(12700) * %i(1024))
			:i %GLOBAL%$heap_size_musician_vram$ = (%i(0) * %i(1024))
			:i %GLOBAL%$heap_size_ragskel$ = (%i(1200) * %i(1024))
			:i %GLOBAL%$heap_size_musician_anim$ = ((%i(24) * %i(1024) * %i(1024)) + (%i(128) * %i(1024)))
			:i %GLOBAL%$heap_size_havok$ = (%i(3) * %i(1024) * %i(1024))
			:i %GLOBAL%$heap_size_downloads$ = (%i(4096) * %i(1024))
			:i %GLOBAL%$heap_size_downloads_vram$ = (%i(0) * %i(1024))
			:i %GLOBAL%$heap_size_global_cas$ = (%i(30) * %i(1024) * %i(1024))
			:i %GLOBAL%$heap_size_global_cas_vram$ = (%i(0) * %i(1024) * %i(1024))
			:i %GLOBAL%$heap_size_cas$ = (%i(68) * %i(1024) * %i(1024))
			:i %GLOBAL%$heap_size_cas_vram$ = (%i(0) * %i(1024) * %i(1024))
			:i %GLOBAL%$size_zones$ = (%i(50) * %i(1024) * %i(1024))
			:i %GLOBAL%$size_zones_vram$ = (%i(0) * %i(1024))
			:i %GLOBAL%$heap_size_song$ = (%i(19200) * %i(1024))
			:i %GLOBAL%$heap_size_bink$ = (%i(9) * %i(1024) * %i(1024))
			:i %GLOBAL%$size_zones_in_cas$ = (%i(19) * %i(1024) * %i(1024))
			:i %GLOBAL%$size_zones_in_cas_vram$ = (%i(0) * %i(1024))
			:i %GLOBAL%$heap_size_song_in_cas$ = (%i(0) * %i(1024))
			:i %GLOBAL%$heap_size_bink_in_cas$ = (%i(3) * %i(1024) * %i(1024))
			:i %GLOBAL%$cas_cache_size_in_cas$ = (%i(6) * %i(1024) * %i(1024))
			:i %GLOBAL%$heap_size_drumkits$ = (%i(1) * %i(1024))
			:i %GLOBAL%$heap_size_ui_pak_slot$ = (%i(8) * %i(1024) * %i(1024))
			:i %GLOBAL%$heap_size_ghtunes_cache$ = (%i(1) * %i(1024) * %i(1024))
			:i %GLOBAL%$heap_size_ghtunes_cache_vram$ = (%i(0) * %i(1024))
			:i %GLOBAL%$heap_size_pak_cache$ = ((%i(30) * %i(1024) * %i(1024)) + (%i(800) * %i(1024)))
			:i %GLOBAL%$heap_size_pak_cache_vram$ = (%i(0) * %i(1024) * %i(1024))
			:i %GLOBAL%$heap_size_save_file$ = ((%i(2) * %i(1024) * %i(1024)) + (%i(40) * %i(1024)))
			:i %GLOBAL%$heap_size_save_file_vram$ = %i(0)
			:i endcase
		case $PS3$
			:i %GLOBAL%$heap_size_globalpak$ = (%i(3200) * %i(1024))
			:i %GLOBAL%$heap_size_globalpak_vram$ = ((%i(22) * %i(1024) * %i(1024)) + (%i(100) * %i(1024)))
			:i %GLOBAL%$heap_size_audio$ = ((%i(13) * %i(1024) * %i(1024)) + (%i(512) * %i(1024)))
			:i %GLOBAL%$heap_size_audio_vram$ = (%i(37) * %i(1024) * %i(1024))
			:i %GLOBAL%$heap_size_drumkitaudio$ = (%i(32) * %i(1024))
			:i %GLOBAL%$heap_size_drumkitaudio_vram$ = (%i(2) * %i(1024) * %i(1024))
			:i %GLOBAL%$heap_size_lightshow$ = (%i(800) * %i(1024))
			:i %GLOBAL%$heap_size_musician$ = (%i(1850) * %i(1024))
			:i %GLOBAL%$heap_size_musician_vram$ = (%i(10000) * %i(1024))
			:i %GLOBAL%$heap_size_ragskel$ = (%i(400) * %i(1024))
			:i %GLOBAL%$heap_size_musician_anim$ = (%i(24) * %i(1024) * %i(1024))
			:i %GLOBAL%$heap_size_havok$ = (%i(3) * %i(1024) * %i(1024))
			:i %GLOBAL%$heap_size_downloads$ = (%i(256) * %i(1024))
			:i %GLOBAL%$heap_size_downloads_vram$ = (%i(768) * %i(1024))
			:i %GLOBAL%$heap_size_global_cas$ = ((%i(9) * %i(1024) * %i(1024)) + (%i(400) * %i(1024)))
			:i %GLOBAL%$heap_size_global_cas_vram$ = (%i(19) * %i(1024) * %i(1024))
			:i %GLOBAL%$heap_size_cas$ = (%i(20) * %i(1024) * %i(1024))
			:i %GLOBAL%$heap_size_cas_vram$ = (%i(50) * %i(1024) * %i(1024))
			:i %GLOBAL%$size_zones$ = (%i(3500) * %i(1024))
			:i %GLOBAL%$size_zones_vram$ = (%i(39) * %i(1024) * %i(1024))
			:i %GLOBAL%$heap_size_song$ = (%i(9600) * %i(1024))
			:i %GLOBAL%$heap_size_bink$ = (%i(7) * %i(1024) * %i(1024))
			:i %GLOBAL%$size_zones_in_cas$ = (%i(1000) * %i(1024))
			:i %GLOBAL%$size_zones_in_cas_vram$ = (%i(17) * %i(1024) * %i(1024))
			:i %GLOBAL%$heap_size_song_in_cas$ = (%i(0) * %i(1024))
			:i %GLOBAL%$heap_size_bink_in_cas$ = (%i(3) * %i(1024) * %i(1024))
			:i %GLOBAL%$cas_cache_size_in_cas$ = (%i(700) * %i(1024))
			:i %GLOBAL%$cas_cache_size_vram_in_cas$ = (%i(6) * %i(1024) * %i(1024))
			:i %GLOBAL%$heap_size_ui_pak_slot$ = (%i(600) * %i(1024))
			:i %GLOBAL%$heap_size_ui_pak_slot_vram$ = ((%i(6) * %i(1024) * %i(1024)) + (%i(512) * %i(1024)))
			:i %GLOBAL%$heap_size_ghtunes_cache$ = (%i(1) * %i(1024) * %i(1024))
			:i %GLOBAL%$heap_size_ghtunes_cache_vram$ = (%i(0) * %i(1024))
			:i %GLOBAL%$heap_size_pak_cache$ = (%i(430) * %i(1024))
			:i %GLOBAL%$heap_size_pak_cache_vram$ = (%i(20) * %i(1024) * %i(1024))
			:i %GLOBAL%$heap_size_save_file$ = ((%i(2) * %i(1024) * %i(1024)) + (%i(10) * %i(1024)))
			:i %GLOBAL%$heap_size_save_file_vram$ = %i(0)
			:i endcase
		default 
			:i $ScriptAssert$${StructQBStringQs 0xfb3c58ff}$
	:i end_switch
	:i return isNull 
	:i endfunction
]Script create_havok_heap 0x57603705 [	:i $get_heap_sizes$
	:i $PushMemProfile$${StructString 0x00000000 = "HavokHeap"}$
	:i $meminitheap$$Name$ = %s("heap_havok")$size$ = %GLOBAL%$heap_size_havok$
	:i $PopMemProfile$
	:i endfunction]Script print_loading_time 0x3f553765 [	:i $GetElapsedTime$$starttime$ = %GLOBAL%$starttime$
	:i $finalprintf$^[1d312485]^$a$ = %GLOBAL%$elapsedtime$$t$ = %GLOBAL%$text$
	:i endfunction]Script guitar_startup 0xf1714762 [	:i $change$${StructInt assertonmissingscripts = 1}$
	:i $loading_screen$ = %i(1)
	:i $GetTerritory$
	:i if $GotParam$${StructQBKey territory}$
		:i if (%GLOBAL%$territory$ = $territory_us$)
			:i if $french$
				:i $DisplayLoadingScreen$${StructString 0x00000000 = "boot_legal_frecan"StructString spin3d_texture = "load_wheel"StructInt spin_x = 454StructInt spin_y = 554StructFloat scale = 0.054999999701976776StructInt Speed = -2}$
				:i $loading_screen$ = %i(0)
			:i endif
		:i endif
	:i endif
	:i if (%GLOBAL%$loading_screen$ = %i(1))
		:i $DisplayLoadingScreen$${StructString 0x00000000 = "boot_legal"StructString spin3d_texture = "load_wheel"StructInt spin_x = 454StructInt spin_y = 554StructFloat scale = 0.054999999701976776StructInt Speed = -2StructQBKey localized}$
	:i endif
	:i $GetStartTime$
	:i $OverallStartTime$ = %GLOBAL%$starttime$
	:i $GetTrueStartTime$
	:i $printf$${StructQBStringQs 0xd21eb1c0}$
	:i $get_heap_sizes$
	:i $PushMemProfile$${StructString 0x00000000 = "Global Pak Heap"}$
	:i $meminitheap$$Name$ = %s("heap_global_pak")$size$ = %GLOBAL%$heap_size_globalpak$$vram_size$ = %GLOBAL%$heap_size_globalpak_vram$
	:i $PopMemProfile$
	:i $GetStartTime$
	:i $InitializeCASArchive$
	:i $print_loading_time$$starttime$ = %GLOBAL%$starttime$$text$ = ^[6b785631]^
	:i $PushMemProfile$${StructString 0x00000000 = "Characters"}$
	:i $meminitheap$$Name$ = %s("heap_musician1")$size$ = %GLOBAL%$heap_size_musician$$vram_size$ = %GLOBAL%$heap_size_musician_vram$$vm$
	:i $meminitheap$$Name$ = %s("heap_musician2")$size$ = %GLOBAL%$heap_size_musician$$vram_size$ = %GLOBAL%$heap_size_musician_vram$$vm$
	:i $meminitheap$$Name$ = %s("heap_musician3")$size$ = %GLOBAL%$heap_size_musician$$vram_size$ = %GLOBAL%$heap_size_musician_vram$$vm$
	:i $meminitheap$$Name$ = %s("heap_musician4")$size$ = %GLOBAL%$heap_size_musician$$vram_size$ = %GLOBAL%$heap_size_musician_vram$$vm$
	:i $meminitheap$$Name$ = %s("heap_musician_anim")$size$ = %GLOBAL%$heap_size_musician_anim$$vm$
	:i $meminitheap$$Name$ = %s("heap_ragskel")$size$ = %GLOBAL%$heap_size_ragskel$
	:i $PopMemProfile$
	:i $PushMemProfile$${StructString 0x00000000 = "Light Show Heap"}$
	:i $meminitheap$$Name$ = %s("heap_lightshow")$size$ = %GLOBAL%$heap_size_lightshow$
	:i $PopMemProfile$
	:i $PushMemProfile$${StructString 0x00000000 = "Downloads"}$
	:i $meminitheap$$Name$ = %s("heap_downloads")$size$ = %GLOBAL%$heap_size_downloads$$vram_size$ = %GLOBAL%$heap_size_downloads_vram$
	:i $PopMemProfile$
	:i $PushMemProfile$${StructString 0x00000000 = "Audio"}$
	:i if $IsFmodEnabled$
		:i $meminitheap$$Name$ = %s("heap_audio")$size$ = %GLOBAL%$heap_size_audio$$vram_size$ = %GLOBAL%$heap_size_audio_vram$
	:i endif
	:i $meminitheap$$Name$ = %s("heap_drumkitaudio")$size$ = %GLOBAL%$heap_size_drumkitaudio$$vram_size$ = %GLOBAL%$heap_size_drumkitaudio_vram$
	:i $PopMemProfile$
	:i $InitSoundSystem$
	:i $LoadDrumKitAll$${StructInt async = 0}$
	:i $PushMemProfile$${StructString 0x00000000 = "Global CAS Heap"}$
	:i $meminitheap$$Name$ = %s("heap_global_cas")$size$ = %GLOBAL%$heap_size_global_cas$$vram_size$ = %GLOBAL%$heap_size_global_cas_vram$$vm$
	:i $PopMemProfile$
	:i $PushMemProfile$${StructString 0x00000000 = "CAS Heap"}$
	:i $meminitheap$$Name$ = %s("heap_cas")$size$ = %GLOBAL%$heap_size_cas$$vram_size$ = %GLOBAL%$heap_size_cas_vram$$vm$
	:i $PopMemProfile$
	:i $mempushcontext$${StructQBKey bottomupheap}$
	:i $PushMemProfile$${StructString 0x00000000 = "GH Tunes Cache Heap"}$
	:i $meminitheap$$Name$ = %s("heap_ghtunes_cache")$size$ = %GLOBAL%$heap_size_ghtunes_cache$$vram_size$ = %GLOBAL%$heap_size_ghtunes_cache_vram$$vm$
	:i $PopMemProfile$
	:i $mempopcontext$
	:i $alloc_pak_cache$ = %i(0)
	:i if $IsXenon$
		:i if (($CD$) OR (~$force_pak_caching$ = %i(1)))
			:i if (~$disable_pak_caching$ = %i(0))
				:i $alloc_pak_cache$ = %i(1)
			:i endif
		:i endif
	:i else 
		:i $alloc_pak_cache$ = %i(1)
	:i endif
	:i if (%GLOBAL%$alloc_pak_cache$ = %i(1))
		:i $mempushcontext$${StructQBKey bottomupheap}$
		:i $PushMemProfile$${StructString 0x00000000 = "Pak Cache Heap"}$
		:i $meminitheap$$Name$ = %s("heap_pak_cache")$size$ = %GLOBAL%$heap_size_pak_cache$$vram_size$ = %GLOBAL%$heap_size_pak_cache_vram$
		:i $PopMemProfile$
		:i $mempopcontext$
	:i endif
	:i $printf$${StructQBStringQs 0xac968502}$
	:i $PushMemProfile$${StructString 0x00000000 = "COIM"}$
	:i $InitCOIM$${StructQBString size = Generic_COIM_SizeStructQBString blockalign = Generic_COIM_BlockAlignStructQBKey coim_min_scratch_blocksStructQBString Generic_COIM_Params}$
	:i $PopMemProfile$
	:i $PushMemProfile$${StructString 0x00000000 = "CompositeObjectManager_startup"}$
	:i $CompositeObjectManager_startup$
	:i $PopMemProfile$
	:i $printf$${StructQBStringQs 0x14b44030}$
	:i $PushMemProfile$${StructString 0x00000000 = "MemCardSystem"}$
	:i $meminitheap$$Name$ = %s("heap_save_file")$size$ = %GLOBAL%$heap_size_save_file$$vram_size$ = %GLOBAL%$heap_size_save_file_vram$
	:i $MemCardSystemInitialize$
	:i $PopMemProfile$
	:i $MC_SetActivePlayer$${StructQBKey querydefault}$
	:i $printf$${StructQBStringQs 0x83673364}$
	:i $PushMemProfile$${StructString 0x00000000 = "FileCache"}$
	:i $InitFileCache$${StructInt max_files = 1024StructInt streambuff = 0StructInt size = 2048StructQBKey disable_on_start}$
	:i $PopMemProfile$
	:i $printf$${StructQBStringQs 0x9fac0f68}$
	:i $PushMemProfile$${StructString 0x00000000 = "AnimCompressTable"}$
	:i $InitAnimCompressTable$${StructString 0x00000000 = "anims\standardkeyq.bin"StructQBKey q48}$
	:i $InitAnimCompressTable$${StructString 0x00000000 = "anims\standardkeyt.bin"StructQBKey t48}$
	:i $PopMemProfile$
	:i $PushMemProfile$${StructString 0x00000000 = "Animation Cache"}$
	:i $InitAnimSystem$:s{
		:i $animheapsize$ = %i(0)
		:i $cacheblockalign$ = %i(3072)
		:i $animnxbuffersize$ = (%i(2) * %i(1024) * %i(1024))
		:i $defcachetype$ = $fullres$
		:i $maxanimstages$ = %i(2)
		:i $maxanimsubsets$ = %i(4)
		:i $maxdegenerateanims$ = %i(3)
		:i $animjqsize$ = (%i(140) * %i(1024))
	:i :s}
	:i $PopMemProfile$
	:i $LoadPak$${StructString 0x00000000 = "pak/animq.pak"StructQBKey heap = TopDownHeapStructQBKey no_vram}$
	:i $RegisterAllAnimEvents$
	:i $UnloadPak$${StructString 0x00000000 = "pak/animq.pak"}$
	:i $PushMemProfile$${StructString 0x00000000 = "InitLightManager"}$
	:i $InitLightManager$${StructInt max_lights = 96StructInt max_model_lights = 1StructInt max_groups = 16}$
	:i $PopMemProfile$
	:i $PushMemProfile$${StructString 0x00000000 = "LightShow"}$
	:i $LightShow_AddNodeFlags$
	:i $LightShow_Init$${StructQBString notes = LightShow_NoteMappingStructQBString nodeflags = LightShow_StateNodeFlags}$
	:i $LightShow_SetProcessors$${StructQBString shared = LightShow_SharedProcessors}$
	:i $PopMemProfile$
	:i $PushMemProfile$${StructString 0x00000000 = "create_node_flags"}$
	:i $create_node_flags$
	:i $PopMemProfile$
	:i $PushMemProfile$${StructString 0x00000000 = "Game Heaps"}$
	:i $mempushcontext$${StructQBKey heap_cas}$
	:i $GetStartTime$
	:i $LoadPak$${StructString 0x00000000 = "pak/cas_deform.pak"StructQBKey heap = heap_global_cas}$
	:i $print_loading_time$$starttime$ = %GLOBAL%$starttime$$text$ = ^[28f6e7de]^
	:i $GetStartTime$
	:i $LoadPak$${StructString 0x00000000 = "pak/cas_acc_bones.pak"StructQBKey heap = heap_global_casStructQBKey is_rawStructQBKey no_vram}$
	:i $print_loading_time$$starttime$ = %GLOBAL%$starttime$$text$ = ^[db02f0b5]^
	:i $GetStartTime$
	:i $LoadPak$${StructString 0x00000000 = "pak/cas_globalpak.pak"StructQBKey heap = heap_global_casStructQBKey is_raw}$
	:i $LoadPak$${StructString 0x00000000 = "pak/cas_captextures.pak"StructQBKey heap = heap_global_cas}$
	:i $CASAddGlobalRawPak$${StructQBKey Name = pak/cas_globalpak.pak}$
	:i $CASAddGlobalRawPak$${StructQBKey Name = pak/cas_globalpak_vram.pak}$
	:i $print_loading_time$$starttime$ = %GLOBAL%$starttime$$text$ = ^[0563180c]^
	:i $printf$${StructQBStringQs 0xd8517ff0}$
	:i $mempushcontext$${StructQBKey bottomupheap}$
	:i if (~$ps2_venues$ = %i(1))
		:i $CreatePakManMap$$map$ = $zones$$Links$ = $GHZones$$folder$ = %s("zones_ps2/")$size$ = (%GLOBAL%$size_zones$ / %i(1024))$vram_size$ = (%GLOBAL%$size_zones_vram$ / %i(1024))$allocheap$ = $heap_cas$
	:i else 
		:i $CreatePakManMap$$map$ = $zones$$Links$ = $GHZones$$folder$ = %s("zones/")$size$ = (%GLOBAL%$size_zones$ / %i(1024))$vram_size$ = (%GLOBAL%$size_zones_vram$ / %i(1024))$allocheap$ = $heap_cas$
	:i endif
	:i $mempopcontext$
	:i $meminitheap$$Name$ = %s("heap_song")$size$ = %GLOBAL%$heap_size_song$
	:i $meminitheap$$Name$ = %s("heap_bink")$size$ = %GLOBAL%$heap_size_bink$
	:i $mempopcontext$
	:i $PopMemProfile$
	:i if NOT (~$cas_heap_state$ = $in_game$)
		:i $scriptassert$${StructString 0x00000000 = "Invalid initial cas_heap_state"}$
	:i endif
	:i if $ScriptExists$${StructQBKey init_globaltags}$
		:i $get_num_globaltag_sets$
		:i $init_packed_structs$$globaltag_sets$ = %GLOBAL%$num_globaltag_sets$
		:i $init_globaltags$$globaltag_sets$ = %GLOBAL%$num_globaltag_sets$
	:i endif
	:i $printf$${StructQBStringQs 0xa30ccd58}$
	:i if $are_replays_enabled$
		:i $get_replay_heap$
		:i $mempushcontext$%GLOBAL%$replay_heap$
		:i $PushMemProfile$${StructString 0x00000000 = "Replay buffer"}$
		:i $GetPlatform$
		:i switch %GLOBAL%$platform$
			:i case $Xenon$
				:i %GLOBAL%$replay_buffer_size$ = (%i(1024) * %i(4))
				:i endcase
			case $PS3$
				:i %GLOBAL%$replay_buffer_size$ = (%i(1024) * %i(1))
				:i endcase
			default 
				:i $scriptassert$${StructQBStringQs 0xe62cb6f3}$
		:i end_switch
		:i $AllocateDataBuffer$$Name$ = $Replay$$kb$ = %GLOBAL%$replay_buffer_size$
		:i $PopMemProfile$
		:i $mempopcontext$
	:i endif
	:i $set_plat_jam_maximums$
	:i $engineConfig$${StructInt particlelod = 0}$
	:i $engineConfig$${StructQBKey shadowalgorithm = none}$
	:i $engineConfig$${StructFloat deferredshadowblurradius = 6.00}$
	:i $engineConfig$${StructFloat lightprojectorshadowblurradius = 3.00}$
	:i $engineConfig$${StructQBKey fillburstblendmode_pass0 = blend}$
	:i $engineConfig$${StructArray fillburstclearcolor_pass0{	ArrayFloat	[		0.300000		0.300000		0.300000		0.00000	]}}$
	:i $engineConfig$${StructQBKey fillburstblendmode_pass1 = addrgba}$
	:i $engineConfig$${StructArray fillburstclearcolor_pass1{	ArrayInteger	[		0		0		0		0	]}}$
	:i $GetStartTime$
	:i $LoadPak$${StructString 0x00000000 = "pak/global_ad_tex/global_ad_tex.pak"StructQBKey heap = heap_massive_ads}$
	:i $print_loading_time$$starttime$ = %GLOBAL%$starttime$$text$ = ^[ec5f94aa]^
	:i $GetStartTime$
	:i $LoadPak$${StructString 0x00000000 = "pak/global_model_tex/global_model_tex.pak"StructQBKey heap = heap_global_pak}$
	:i $print_loading_time$$starttime$ = %GLOBAL%$starttime$$text$ = ^[99f9642a]^
	:i $GetStartTime$
	:i $LoadPak$${StructString 0x00000000 = "pak/global_rag_skel/global_rag_skel.pak"StructQBKey heap = heap_global_pakStructQBKey is_raw}$

	// Compressed skeletons
	:i $LoadPak$%s("pak/grskel_custom/grskel_custom.pak")$Heap$=$heap_global_pak$$is_raw$

	:i $print_loading_time$$starttime$ = %GLOBAL%$starttime$$text$ = ^[2c569805]^
	:i if (~$is_demo_mode$ = %i(1))
		:i $change$${StructInt enable_button_cheats = 0}$
	:i endif
	:i if $CD$
		:i $change$${StructInt enable_button_cheats = 0}$
	:i endif
	:i if (~$enable_button_cheats$ = %i(1))
		:i $launchviewer$
		:i $change$${StructInt select_shift = 1}$
	:i endif
	:i if NOT $CD$
		:i $change$${StructInt skip_boot_menu = 1}$
	:i endif
	:i $printf$${StructQBStringQs 0x36fa0eb9}$
	:i $Master_SFX_Adding_Sound_Busses$
	:i $printf$${StructQBStringQs 0x6e45d61e}$
	:i $PushMemProfile$${StructString 0x00000000 = "net_load_preferences"}$
	:i $net_load_preferences$
	:i $PopMemProfile$
	:i $printf$${StructQBStringQs 0x288a39f2}$
	:i if $ScriptExists$${StructQBKey startup}$
		:i $startup$
	:i endif
	:i $printf$${StructQBStringQs 0x049fa44b}$
	:i $PushMemProfile$${StructString 0x00000000 = "UI Pak Slot"}$
	:i $meminitheap$$Name$ = %s("heap_ui_pak_slot")$size$ = %GLOBAL%$heap_size_ui_pak_slot$$vram_size$ = %GLOBAL%$heap_size_ui_pak_slot_vram$
	:i $PopMemProfile$
	:i $PushMemProfile$${StructString 0x00000000 = "UI_InitializeStateMachine"}$
	:i $UI_InitializeStateMachine$
	:i $PopMemProfile$
	:i $printf$${StructQBStringQs 0xd27c51ef}$
	:i $GetStartTime$
	:i $LoadPak$${StructString 0x00000000 = "zones/global/global.pak"StructQBKey heap = heap_global_pakStructQBKey splitfile}$

	// Load original skeletons
	:i $LoadPak$%s("pak/grskel_custom_orig/grskel_custom_orig.pak")$Heap$=$heap_global_pak$

	// Required for GHSDK skeletons
	:i $Load_GHSDK_Skeletons$

	:i $print_loading_time$$starttime$ = %GLOBAL%$starttime$$text$ = ^[f9d25732]^
	:i $parsenodearray$${StructQBKey queueStructQBKey zone_name = globalStructQBKey array_name = GLOBAL_NodeArray}$
	:i $create_global_materials$
	:i $GetStartTime$
	:i $LoadPak$${StructString 0x00000000 = "pak/anims/perm_anims/perm_anims.pak"StructQBKey heap = heap_musician_animStructQBKey no_vram}$
	:i $LoadPak$${StructString 0x00000000 = "pak/ui_shared/ui_shared.pak"StructQBKey heap = heap_global_pak}$
	:i $print_loading_time$$starttime$ = %GLOBAL%$starttime$$text$ = ^[3136c57e]^
	:i if NOT $isPS3$
		:i if $gotextramemory$
			:i $mempushcontext$${StructQBKey debugheap}$
		:i endif
	:i endif
	:i $LoadPak$${StructString 0x00000000 = "fonts/debug.pak"}$
	:i if NOT $isPS3$
		:i if $gotextramemory$
			:i $mempopcontext$
		:i endif
	:i endif
	:i $SetFontProperties$${StructString 0x00000000 = "debug"StructQBString color_tab = Default_Font_ColorsStructQBKey debug_font}$
	:i $SetFontNonProportionalNumbers$${StructString 0x00000000 = "debug"}$
	:i if $IsXenon$
		:i $buttons_font$ = %s("buttons_x360")
	:i else 
		:i if $isPS3$
			:i $buttons_font$ = %s("ButtonsPs3")
		:i endif
	:i endif
	:i $SetFontProperties$%GLOBAL%$buttons_font$$buttons_font$
	:i $SetFontProperties$${StructString 0x00000000 = "fontgrid_numeral_a7"StructQBString color_tab = Default_Font_Colors}$
	:i $SetFontProperties$${StructString 0x00000000 = "fontgrid_numeral_a9"StructQBString color_tab = Default_Font_Colors}$
	:i $SetFontProperties$${StructString 0x00000000 = "fontgrid_text_a3"StructQBString color_tab = Default_Font_Colors}$
	:i $SetFontProperties$${StructString 0x00000000 = "fontgrid_text_a6"StructQBString color_tab = Default_Font_Colors}$
	:i $SetFontProperties$${StructString 0x00000000 = "fontgrid_text_a8"StructQBString color_tab = Default_Font_Colors}$
	:i $SetFontProperties$${StructString 0x00000000 = "fontgrid_text_a10"StructQBString color_tab = Default_Font_Colors}$
	:i $SetFontProperties$${StructString 0x00000000 = "fontgrid_text_a11"StructQBString color_tab = Default_Font_Colors}$
	:i $SetFontProperties$${StructString 0x00000000 = "fontgrid_text_a11_b"StructQBString color_tab = Default_Font_Colors}$
	:i $SetFontProperties$${StructString 0x00000000 = "fontgrid_text_a11_large"StructQBString color_tab = Default_Font_Colors}$
	:i $SetFontProperties$${StructString 0x00000000 = "fontgrid_title_a1"StructQBString color_tab = Default_Font_Colors}$
	:i $PushMemProfile$${StructString 0x00000000 = "FMod Streams + SFX"}$
	:i if $IsFmodEnabled$
		:i $GetStartTime$
		:i $LoadFSB$${StructString filename = "streams/streamall"StructInt numstreams = 4StructQBKey nowait}$
		:i $change$$streamall_fsb_index$ = %GLOBAL%$fsb_index$
		:i $print_loading_time$$starttime$ = %GLOBAL%$starttime$$text$ = ^[82a57b3c]^
		:i $GetStartTime$
		:i $EnableRemoveSoundEntry$${StructQBKey enable}$
		:i $LoadPak$${StructString 0x00000000 = "zones/global/global_sfx.pak"StructQBKey heap = heap_audio}$
		:i $print_loading_time$$starttime$ = %GLOBAL%$starttime$$text$ = ^[6c6b87a9]^
	:i endif
	:i $PopMemProfile$
	:i $SetScenePermanent$${StructString scene = "zones/global/global_gfx.scn"StructQBKey permanent}$
	:i $PushMemProfile$${StructString 0x00000000 = "setup_models"}$
	:i $setup_models$
	:i $PopMemProfile$
	:i $printf$${StructQBStringQs 0x52f069b2}$
	:i $printf$${StructQBStringQs 0x7ef8c198StructQBString s = current_level}$
	:i $SetPakManCurrentBlock$${StructQBKey map = zonesStructQBKey pak = noneStructInt block_scripts = 1}$
	:i $AddEditableList$${StructQBKey ped_editable_list}$
	:i if NOT $CD$
		:i $startkeyboardhandler$${StructInt max_length = 128}$
	:i endif
	:i $printf$${StructQBStringQs 0xb698d219}$
	:i $PushMemProfile$${StructString 0x00000000 = "Atoms Progression Globaltags"}$
	:i $InitAtoms$
	:i $SetProgressionMaxDifficulty$${StructInt difficulty = 4}$
	:i $printf$${StructQBStringQs 0xd6c8512c}$
	:i $FinalProfile_Start$${StructString 0x00000000 = "reset_globaltags_all"}$
	:i $GetStartTime$
	:i $reset_globaltags_all$
	:i $print_loading_time$$starttime$ = %GLOBAL%$starttime$$text$ = ^[6f02fec2]^
	:i $FinalProfile_Stop$${StructString 0x00000000 = "reset_globaltags_all"}$
	:i $printf$${StructQBStringQs 0xacfe5420}$
	:i $PopMemProfile$
	:i $setup_sprites$
	:i $disable_pause$
	:i $SetShadowRenderingFlags$${StructString enable = "true"StructString Object = "skin"}$
	:i $SetShadowMapParams$${StructFloat far = 16.00}$
	:i $PushMemProfile$${StructString 0x00000000 = "BG Viewport"}$
	:i $setup_bg_viewport$
	:i $restore_dummy_bg_camera$
	:i $PopMemProfile$
	:i $GetMaxPlayers$
	:i $player$ = %i(1)
	:i while 
	:i $FormatText$$ChecksumName$ = $player_status$%s("player%i_status")$i$ = %GLOBAL%$player$$addtostringlookup$
	:i $FormatText$$TextName$ = $player_text$%s("p%i")$i$ = %GLOBAL%$player$$addtostringlookup$
	:i $SpawnScriptLater$$create_guitar_events$$params$ = :s{ isNull :s}
	:i $player$ = (%GLOBAL%$player$ + %i(1))
	:i loop_to %GLOBAL%$max_players$
	:i $SetShadowProjectionTexture$${StructQBKey texture = white}$
	:i $fadetoblack$${StructQBKey OnStructFloat alpha = 1.00StructFloat time = 0.00StructInt z_priority = 100StructQBKey no_wait}$
	:i if (~$autolaunch_startnow$ = %i(0))
		:i if $GlobalExists$${StructQBKey Name = autolaunch_stateStructQBKey Type = checksum}$
			:i $fadetoblack$${StructQBKey OffStructQBKey no_wait}$
			:i $change$${StructInt primary_controller_assigned = 1}$
			:i $ui_event$${StructQBKey event = menu_changeStructStruct data{	StructHeader	{		StructQBString state = autolaunch_state	}}}$
		:i elseif (~$skip_boot_menu$ = %i(1))
			:i $change$${StructInt primary_controller_assigned = 1}$
			:i $StartRendering$
			:i if ((~$autolaunch_cas$ = %i(1)) OR (~$autolaunch_jam$ = %i(1)) OR (~$skip_signin$ = %i(1)))
				:i $change$${StructInt skip_signin = 0}$
				:i $change$${StructInt primary_controller_assigned = 1}$
				:i $ui_event$${StructQBKey event = menu_changeStructStruct data{	StructHeader	{		StructQBKey state = UIstate_mainmenu	}}}$
			:i else 
				:i $ui_event$${StructQBKey event = menu_changeStructStruct data{	StructHeader	{		StructQBKey state = UIstate_boot_iis	}}}$
			:i endif
		:i else 
			:i $StartRendering$
			:i $ui_event$${StructQBKey event = menu_changeStructStruct data{	StructHeader	{		StructQBKey state = UIstate_boot_legal	}}}$
			:i $AddParams$${StructQBKey donthide}$
		:i endif
	:i else 
		:i $StartRendering$
		:i $fadetoblack$${StructQBKey OffStructQBKey no_wait}$
		:i $SpawnScriptLater$${StructQBKey autolaunch_spawned}$
	:i endif
	:i $guitar_create_character_maps$
	:i $BuildCasLookupTables$${StructQBKey master_editable_list = master_editable_list}$
	:i if NOT $CD$
		:i if $CasArtist$
			:i $verify_cas_budgets$${StructQBKey profiles}$
		:i endif
	:i endif
	:i $PushMemProfile$${StructString 0x00000000 = "CAS Asset Storage"}$
	:i $CASAllocateBudgetBlock$${StructQBKey heap = heap_musician1StructQBKey Name = heap_musician1StructQBString budget = cas_budget_groups}$
	:i $CASAllocateBudgetBlock$${StructQBKey heap = heap_musician2StructQBKey Name = heap_musician2StructQBString budget = cas_budget_groups}$
	:i $CASAllocateBudgetBlock$${StructQBKey heap = heap_musician3StructQBKey Name = heap_musician3StructQBString budget = cas_budget_groups}$
	:i $CASAllocateBudgetBlock$${StructQBKey heap = heap_musician4StructQBKey Name = heap_musician4StructQBString budget = cas_budget_groups}$
	:i $CASAllocateBudgetBlock$${StructQBKey heap = heap_musician4StructQBKey Name = band_logo_blockStructQBString budget = cas_band_logo_budget}$
	:i $CreateAssetStorageFromBudgetBlock$${StructQBKey Name = heap_musician1}$
	:i $CreateAssetStorageFromBudgetBlock$${StructQBKey Name = heap_musician2}$
	:i $CreateAssetStorageFromBudgetBlock$${StructQBKey Name = heap_musician3}$
	:i $CreateAssetStorageFromBudgetBlock$${StructQBKey Name = heap_musician4}$
	:i $CreateAssetStorageFromBudgetBlock$$Name$ = $band_logo_block$$slopheap$ = $bottomupheap$$assetcontext$ = (~$CAS_Band_Logo_Details$->$assetcontext$)
	:i $PopMemProfile$
	:i $CASTemporariesSetHeap$${StructQBKey heap = heap_cas}$
	:i $GetStartTime$
	:i $check_for_dupe_profiles$
	:i $print_loading_time$$starttime$ = %GLOBAL%$starttime$$text$ = ^[ccbb6862]^
	:i $create_font_arrays$
	:i $PushMemProfile$${StructString 0x00000000 = "band_logo"}$
	:i $ensure_band_logo_object_created$
	:i $PopMemProfile$
	:i $RegisterTexDictForUI$(~$CAS_Band_Logo_Details$->$texdict$)
	:i $change$${StructInt tutorial_disable_hud = 0}$
	:i $CreateScreenElement$${StructQBKey Type = containerelementStructQBKey id = dead_particle_containerStructQBKey parent = root_windowStructFloatX2 Pos{	Floats [0.00000, 0.00000]}}$
	:i $PushMemProfile$${StructString 0x00000000 = "Init2DParticles"}$
	:i $Init2DParticles$${StructQBKey parent = dead_particle_container}$
	:i $PopMemProfile$
	:i $vocals_start_mic$
	:i if (~$autolaunch_startnow$ !== %i(0))
		:i $vocals_distribute_mics$
	:i endif
	:i %GLOBAL%$profile_gpu$ = %i(0)
	:i if (~$show_gpu_time$ = %i(1))
		:i %GLOBAL%$profile_gpu$ = %i(1)
	:i endif
	:i if (~$output_gpu_log$ = %i(1))
		:i %GLOBAL%$profile_gpu$ = %i(1)
	:i endif
	:i if (%GLOBAL%$profile_gpu$ = %i(1))
		:i $togglemetrics$${StructInt mode = 5}$
		:i $change$${StructInt current_cpu = 6}$
	:i else 
		:i if (~$show_cpu_time$ = %i(1))
			:i $change$${StructInt current_cpu = 0}$
			:i $togglemetrics$${StructInt mode = 5}$
		:i else 
			:i $togglemetrics$${StructInt mode = 0}$
		:i endif
	:i endif
	:i if (~$show_build_version$ = %i(1))
		:i $debug_toggle_changelist$${StructQBKey show}$
	:i endif
	:i $FinalBuildMemReport$
	:i if NOT $GotParam$${StructQBKey donthide}$
		:i $HideLoadingScreen$
	:i endif
	:i $print_loading_time$$starttime$ = %GLOBAL%$OverallStartTime$$text$ = ^[e79eced7]^
	:i endfunction]Script verify_cas_budgets 0xe864ef2d [	:i $VerifyCASBudgets$$editable_list$ = ~$master_editable_list$$budgets$ = ~$cas_budget_groups$ isNull 
	:i if $GotParam$${StructQBKey textures}$
		:i $VerifyCAPTextures$
	:i endif
	:i if $GotParam$${StructQBKey profiles}$
		:i $VerifyCAPProfile$$Profile$ = (~$default_custom_musician_profile_female$) isNull 
		:i $VerifyCAPProfile$$Profile$ = (~$default_custom_musician_profile_male$) isNull 
		:i $VerifyCAPProfile$$profiles$ = (~$Preset_Musician_Profiles_Modifiable$) isNull 
		:i $VerifyCAPProfile$$profiles$ = (~$Preset_Musician_Profiles_Locked$) isNull 
		:i $VerifyCAPProfile$$appearances$ = (~$cas_preset_guitars$) isNull 
		:i $VerifyCAPProfile$$appearances$ = (~$cas_preset_basses$) isNull 
		:i $VerifyCAPProfile$$appearances$ = (~$cas_preset_drums$) isNull 
		:i $VerifyCAPProfile$$appearances$ = (~$cas_preset_female_vocals$) isNull 
		:i $VerifyCAPProfile$$appearances$ = (~$cas_preset_male_vocals$) isNull 
		:i $VerifyCAPProfile$$appearances$ = (~$cas_preset_tattoo_female$) isNull 
		:i $VerifyCAPProfile$$appearances$ = (~$cas_preset_tattoo_male$) isNull 
		:i $VerifyCAPProfile$$appearances$ = (~$cas_preset_face_skin_female$) isNull 
		:i $VerifyCAPProfile$$appearances$ = (~$cas_preset_face_skin_male$) isNull 
		:i $VerifyCAPProfile$$appearances$ = (~$cas_preset_body_female$) isNull 
		:i $VerifyCAPProfile$$appearances$ = (~$cas_preset_body_male$) isNull 
	:i endif
	:i endfunction]Script generate_worst_cas_appearances 0xbf370bb2 [	:i $VerifyCASBudgets$${StructQBString editable_list = master_editable_listStructQBString budgets = cas_budget_groupsStructArray specific_parts{	ArrayQBKey	[		cas_body		CAS_Guitar_Body		CAS_Female_Hat_Hair	]}StructQBKey forcebody = GH4_CAR_Female}$
	:i $guitar_appearance$ = (%GLOBAL%$budget_report_geo$->$worst_parts$)
	:i $VerifyCASBudgets$${StructQBString editable_list = master_editable_listStructQBString budgets = cas_budget_groupsStructArray specific_parts{	ArrayQBKey	[		cas_body		CAS_Bass_Body		CAS_Female_Hat_Hair	]}StructQBKey forcebody = GH4_CAR_Female}$
	:i $bass_appearance$ = (%GLOBAL%$budget_report_geo$->$worst_parts$)
	:i $VerifyCASBudgets$${StructQBString editable_list = master_editable_listStructQBString budgets = cas_budget_groupsStructArray specific_parts{	ArrayQBKey	[		cas_body		CAS_Drums		CAS_Female_Hat_Hair	]}StructQBKey forcebody = GH4_CAR_Female}$
	:i $drum_appearance$ = (%GLOBAL%$budget_report_geo$->$worst_parts$)
	:i $VerifyCASBudgets$${StructQBString editable_list = master_editable_listStructQBString budgets = cas_budget_groupsStructArray specific_parts{	ArrayQBKey	[		cas_body		CAS_Mic		CAS_Female_Hat_Hair	]}StructQBKey forcebody = GH4_CAR_Female}$
	:i $vocals_appearance$ = (%GLOBAL%$budget_report_geo$->$worst_parts$)
	:i $VerifyCASBudgets$${StructQBString editable_list = master_editable_listStructQBString budgets = cas_budget_groupsStructArray specific_parts{	ArrayQBKey	[		cas_body		CAS_Guitar_Body		CAS_Male_Hat_Hair	]}StructQBKey forcebody = GH4_CAR_Male}$
	:i $m_guitar_appearance$ = (%GLOBAL%$budget_report_geo$->$worst_parts$)
	:i $VerifyCASBudgets$${StructQBString editable_list = master_editable_listStructQBString budgets = cas_budget_groupsStructArray specific_parts{	ArrayQBKey	[		cas_body		CAS_Bass_Body		CAS_Male_Hat_Hair	]}StructQBKey forcebody = GH4_CAR_Male}$
	:i $m_bass_appearance$ = (%GLOBAL%$budget_report_geo$->$worst_parts$)
	:i $VerifyCASBudgets$${StructQBString editable_list = master_editable_listStructQBString budgets = cas_budget_groupsStructArray specific_parts{	ArrayQBKey	[		cas_body		CAS_Drums		CAS_Male_Hat_Hair	]}StructQBKey forcebody = GH4_CAR_Male}$
	:i $m_drum_appearance$ = (%GLOBAL%$budget_report_geo$->$worst_parts$)
	:i $VerifyCASBudgets$${StructQBString editable_list = master_editable_listStructQBString budgets = cas_budget_groupsStructArray specific_parts{	ArrayQBKey	[		cas_body		CAS_Mic		CAS_Male_Hat_Hair	]}StructQBKey forcebody = GH4_CAR_Male}$
	:i $m_vocals_appearance$ = (%GLOBAL%$budget_report_geo$->$worst_parts$)
	:i $OutputWorstCaseCASFile$:s{
		:i $Path$ = %s("car_worst_appearances.q")
		:i $structs$ = :s{
			:i $worst_female_guitar_appearance$ = %GLOBAL%$guitar_appearance$
			:i $worst_female_bass_appearance$ = %GLOBAL%$bass_appearance$
			:i $worst_female_drum_appearance$ = %GLOBAL%$drum_appearance$
			:i $worst_female_vocals_appearance$ = %GLOBAL%$vocals_appearance$
			:i $worst_male_guitar_appearance$ = %GLOBAL%$m_guitar_appearance$
			:i $worst_male_bass_appearance$ = %GLOBAL%$m_bass_appearance$
			:i $worst_male_drum_appearance$ = %GLOBAL%$m_drum_appearance$
			:i $worst_male_vocals_appearance$ = %GLOBAL%$m_vocals_appearance$
		:i :s}
	:i :s}
	:i endfunction]Script set_cas_heap_state 0xf39e6003 [	:i if NOT (~$cas_heap_state$ = %GLOBAL%$state$)
		:i $CasBlockForComposite$
		:i $get_heap_sizes$
		:i $free_cas_cache_pak$
		:i $PushMemProfile$${StructString 0x00000000 = "Game Heaps"}$
		:i $mempushcontext$${StructQBKey heap_cas}$
		:i if (%GLOBAL%$state$ = $in_game$)
			:i $memdeleteheap$${StructQBKey Name = heap_bink}$
			:i $DumpFragments$${StructQBKey heap = heap_cas}$
			:i $PakManResizeMap$$map$ = $zones$$size$ = (%GLOBAL%$size_zones$ / %i(1024))$vram_size$ = (%GLOBAL%$size_zones_vram$ / %i(1024))
			:i $meminitheap$$Name$ = %s("heap_song")$size$ = %GLOBAL%$heap_size_song$
			:i $meminitheap$$Name$ = %s("heap_bink")$size$ = %GLOBAL%$heap_size_bink$
		:i else 
			:i $unload_songqpak$
			:i $memdeleteheap$${StructQBKey Name = heap_bink}$
			:i $memdeleteheap$${StructQBKey Name = heap_song}$
			:i $DumpFragments$${StructQBKey heap = heap_cas}$
			:i $PakManResizeMap$$map$ = $zones$$size$ = (%GLOBAL%$size_zones_in_cas$ / %i(1024))$vram_size$ = (%GLOBAL%$size_zones_in_cas_vram$ / %i(1024))
			:i $meminitheap$$Name$ = %s("heap_bink")$size$ = %GLOBAL%$heap_size_bink_in_cas$
			:i $create_cas_cache_pak$$size$ = %GLOBAL%$cas_cache_size_in_cas$$vram_size$ = %GLOBAL%$cas_cache_size_vram_in_cas$
		:i endif
		:i $mempopcontext$
		:i $PopMemProfile$
	:i endif
	:i $change$$cas_heap_state$ = %GLOBAL%$state$
	:i endfunction]Script autolaunch_spawned 0xf18ba9fe [	:i if (~$net_autolaunch_role$ = $none$)
		:i (~$default_loading_screen$->$Create$)
		:i $MC_SetActivePlayer$${StructQBKey querydefault}$
		:i if (~$Autolaunch_ShowStorageSelector$ = %i(1))
			:i $ShowStorageSelector$
		:i endif
		:i $ui_event_block$${StructQBKey event = menu_addStructQBKey state = UIstate_mainmenuStructStruct data{	StructHeader	{		StructString base_name = "mainmenu"	}}}$
		:i $ui_event_block$${StructQBKey event = menu_addStructQBKey state = uistate_select_difficultyStructStruct data{	StructHeader	{		StructString base_name = "select_difficulty"	}}}$
		:i $ui_event_block$${StructQBKey event = menu_addStructQBKey state = uistate_setlistStructStruct data{	StructHeader	{		StructString base_name = "setlist"	}}}$
		:i $ui_event$$event$ = $menu_change$$data$ = :s{$state$ = $uistate_play_song$$device_num$ = (~$player1_status$->$controller$)$uselaststarttime$ = %i(1):s}
	:i else 
		:i $printf$${StructQBStringQs 0xe17688e1}$
		:i $MC_SetActivePlayer$${StructQBKey querydefault}$
		:i if (~$Autolaunch_ShowStorageSelector$ = %i(1))
			:i $ShowStorageSelector$
		:i endif
		:i $ui_event_block$${StructQBKey event = menu_addStructQBKey state = UIstate_mainmenuStructStruct data{	StructHeader	{		StructString base_name = "mainmenu"	}}}$
		:i $ui_event_block$${StructQBKey event = menu_addStructQBKey state = uistate_select_difficultyStructStruct data{	StructHeader	{		StructString base_name = "select_difficulty"	}}}$
		:i $ui_event_block$${StructQBKey event = menu_addStructQBKey state = uistate_setlistStructStruct data{	StructHeader	{		StructString base_name = "setlist"	}}}$
		:i $net_autolaunch_spawned$
	:i endif
	:i endfunction]Script kill_dummy_bg_camera 0x8dd5bb61 [	:i $KillCamAnim$${StructQBKey Name = dummy_cam_bg}$
	:i endfunction]Script restore_dummy_bg_camera 0x6e6a9a08 [	:i $kill_dummy_bg_camera$
	:i $PlayIGCCam$${StructQBKey Name = dummy_cam_bgStructQBKey viewport = bg_viewportStructFloatX3 Pos{	Floats [-28.3445, 0.476313, 7.19577]}StructFloatX3 Quat{	Floats [-0.000720000, -0.997060, -0.0760400]}StructFloat FOV = 72.00StructQBKey play_hold}$
	:i endfunction]Script get_LevelZoneArray_size 0x9ef3d2a7 [	:i $GetArraySize$${StructQBString levelzonearray}$
	:i $size$ = (%GLOBAL%$array_size$)
	:i if $GlobalExists$${StructQBKey Name = download_LevelZoneArrayStructQBKey Type = array}$
		:i $GetArraySize$${StructQBString download_LevelZoneArray}$
		:i $size$ = (%GLOBAL%$array_size$ + %GLOBAL%$size$)
	:i endif
	:i return$array_size$ = %GLOBAL%$size$
	:i endfunction]Script get_LevelZoneArray_checksum 0x219c0241 [	:i $GetArraySize$${StructQBString levelzonearray}$
	:i if (%GLOBAL%$index$ < %GLOBAL%$array_size$)
		:i return$level_checksum$ = (~$levelzonearray$:a{%GLOBAL%$index$:a})
	:i else 
		:i return$level_checksum$ = (~$download_LevelZoneArray$:a{(%GLOBAL%$index$ - %GLOBAL%$array_size$):a})
	:i endif
	:i endfunction]Script Is_LevelZone_Downloaded 0x458cc03b [	${StructQBKey level_checksum = load_z_artdeco}$
	:i if $ArrayContains$$array$ = (~$download_LevelZoneArray$)$contains$ = %GLOBAL%$level_checksum$
		:i $FormatText$$TextName$ = $filename$%s("%s.pak")$s$ = ((~$download_LevelZones$->%GLOBAL%$level_checksum$)->$Name$)
		:i $GetContentFolderIndexFromFile$%GLOBAL%$filename$
		:i if (%GLOBAL%$device$ = $content$)
			:i return${StructInt download = 1StructQBKey true}$
		:i else 
			:i return${StructInt download = 1StructQBKey false}$
		:i endif
	:i else 
		:i return${StructInt download = 0StructQBKey true}$
	:i endif
	:i endfunction]SectionArray debug_cas_checksum_names{	ArrayQBKey	[		largest_desc_id		budget_report_main		budget_report_vram		budget_report_geo		main		vram		underbudget		overbudget		totalsize		slack		heap_cas_vram		assetsizes		budgetsizes		largestpieces		worst_parts		specific_parts		custom_character_0		custom_character_1		custom_character_2		custom_character_3		custom_character_4	]}Script GetCurrentLevel 0x57a14f3d [	:i return$level$ = (~$current_level$)
	:i endfunction]Script get_level_prefix 0x974b14f5 [	:i if $StructureContains$${StructQBString structure = LevelZonesStructQBString current_level}$
		:i return$prefix$ = (~$LevelZones$->(~$current_level$)->$Name$)$prefix_crc$ = (~$LevelZones$->(~$current_level$)->$zone$)
	:i endif
	:i $printf$${StructQBStringQs 0xfd035b9c}$
	:i $printf$${StructQBStringQs 0xc919c9ff}$
	:i $printf$${StructQBStringQs 0xc350451a}$
	:i $printf$${StructQBStringQs 0xfd035b9c}$
	:i $printf$${StructQBStringQs 0xfd035b9c}$
	:i return${StructString prefix = "z_unknown"StructQBKey prefix_crc = z_unknown}$
	:i endfunction]Script preqbromid 0xea35b945 [	:i $pausegh3$
	:i endfunction]Script postqbromid 0x7ae91348 [	:i $restart_gem_scroller$:s{
		:i $song_name$ = (~$current_song$)
		:i $difficulty$ = (~$player1_status$->$difficulty$)
		:i $difficulty2$ = (~$player2_status$->$difficulty$)
		:i $difficulty3$ = (~$player3_status$->$difficulty$)
		:i $difficulty4$ = (~$player4_status$->$difficulty$)
		:i $starttime$ = (~$current_starttime$)
		:i $device_num$ = (~$player1_status$->$controller$)
	:i :s}
	:i endfunction]Script InFrontend 0xb1749209 [	:i return${StructQBKey false}$
	:i endfunction]SectionQBKey rendering_has_been_stopped_explicit falseSectionQBKey rendering_has_been_stopped_hide_glitch falseSectionQBKey rendering_has_been_stopped_menu_transition falseSectionQBKey rendering_has_been_stopped_invalid_viewports falseSectionQBKey rendering_has_been_stopped_loading_screen falseScript StartRendering 0xaeccb2c6 [	${StructQBKey reason = explicit}$
	:i switch %GLOBAL%$reason$
		:i case $explicit$
			:i $change$${StructInt ps3_fader_started_rendering = 0}$
			:i $change$${StructQBKey rendering_has_been_stopped_explicit = false}$
			:i endcase
		case $hide_glitch$
			:i $change$${StructQBKey rendering_has_been_stopped_hide_glitch = false}$
			:i endcase
		case $menu_transition$
			:i $change$${StructQBKey rendering_has_been_stopped_menu_transition = false}$
			:i endcase
		case $invalid_viewports$
			:i $change$${StructQBKey rendering_has_been_stopped_invalid_viewports = false}$
			:i endcase
		case $loading_screen$
			:i $change$${StructQBKey rendering_has_been_stopped_loading_screen = false}$
			:i endcase
		default 
			:i $scriptassert$${StructQBStringQs 0x49bf01ce}$
	:i end_switch
	:i if (~$rendering_has_been_stopped_explicit$ = $true$)
		:i return
	:i endif
	:i if (~$rendering_has_been_stopped_hide_glitch$ = $true$)
		:i return
	:i endif
	:i if (~$rendering_has_been_stopped_menu_transition$ = $true$)
		:i return
	:i endif
	:i if (~$rendering_has_been_stopped_invalid_viewports$ = $true$)
		:i return
	:i endif
	:i if (~$rendering_has_been_stopped_loading_screen$ = $true$)
		:i return
	:i endif
	:i $StartRendering_C$
	:i endfunction]Script StopRendering 0x3540d95d [	${StructQBKey reason = explicit}$
	:i switch %GLOBAL%$reason$
		:i case $explicit$
			:i $change$${StructQBKey rendering_has_been_stopped_explicit = true}$
			:i endcase
		case $hide_glitch$
			:i $change$${StructQBKey rendering_has_been_stopped_hide_glitch = true}$
			:i endcase
		case $menu_transition$
			:i $change$${StructQBKey rendering_has_been_stopped_menu_transition = true}$
			:i endcase
		case $invalid_viewports$
			:i $change$${StructQBKey rendering_has_been_stopped_invalid_viewports = true}$
			:i endcase
		case $loading_screen$
			:i $change$${StructQBKey rendering_has_been_stopped_loading_screen = true}$
			:i endcase
		default 
			:i $scriptassert$${StructQBStringQs 0xe1901769}$
	:i end_switch
	:i $StopRendering_C$
	:i endfunction]Script get_player_status_checksum 0xe754405c [	:i $RequireParams$${StructArray 0x00000000{	ArrayQBKey	[		player	]}StructQBKey all}$
	:i $GetMaxPlayers$
	:i if ((%GLOBAL%$player$ < %i(1)) OR (%GLOBAL%$player$ > %GLOBAL%$max_players$))
		:i $SoftAssert$%s("player value %p should be in range 1-4")$p$ = %GLOBAL%$player$
		:i %GLOBAL%$player$ = %i(1)
	:i endif
	:i $FormatText$$ChecksumName$ = $player_status$%s("player%p_status")$p$ = %GLOBAL%$player$
	:i return$player_status$ = %GLOBAL%$player_status$
	:i endfunction]Script get_replay_heap 0x1cfb70a2 [	:i if $isPS3$
		:i return${StructQBKey replay_heap = debugheap}$
	:i endif
	:i return${StructQBKey replay_heap = bottomupheap}$
	:i endfunction]Script are_replays_enabled 0xb1749209 [	:i return${StructQBKey false}$
	:i endfunction]Script runonqbr 0x2fa8346e [	:i if $CD$
		:i return
	:i endif
	:i if (%GLOBAL%$file$ = %s("reloads\guitar_band_preset_profiles.qb.xen"))
		:i $stars$
		:i $printf$${StructQBStringQs 0xb2f78668}$
		:i $stars$
		:i if (~$cas_heap_state$ = $in_cas$)
			:i if $GetCurrentCASObject$
				:i $GetArraySize$${StructQBString Preset_Musician_Profiles_Modifiable}$
				:i $i$ = %i(0)
				:i while 
				:i $globaltag_set_preset_musician$$savegame$ = (~$cas_current_savegame$)$index$ = %GLOBAL%$i$$appearance$ = (~$Preset_Musician_Profiles_Modifiable$:a{%GLOBAL%$i$:a}->$appearance$)
				:i $i$ = (%GLOBAL%$i$ + %i(1))
				:i loop_to %GLOBAL%$array_size$
				:i if NOT $is_completely_custom_musician$$id$ = (~$cas_current_profile$)$savegame$ = (~$cas_current_savegame$)
					:i $RefreshCASProfile$
				:i endif
			:i endif
		:i endif
	:i endif
	:i endfunction]Script hide_glitch 0x9b3a3bec [	${StructInt num_frames = 1}$
	:i $SpawnScriptNow$$hide_glitch_spawned$$params$ = :s{$num_frames$ = %GLOBAL%$num_frames$:s}
	:i endfunction]SectionInteger hide_glitch_count 0Script hide_glitch_spawned 0xd7d752ce [	:i $OnExitRun$${StructQBKey hide_glitch_spawned_exit}$
	:i $setscriptcannotpause$
	:i $change$$hide_glitch_count$ = (~$hide_glitch_count$ + %i(1))
	:i $StopRendering$${StructQBKey reason = hide_glitch}$
	:i $wait$%GLOBAL%$num_frames$$gameframes$
	:i endfunction]Script hide_glitch_spawned_exit 0x8347f32c [	:i $change$$hide_glitch_count$ = (~$hide_glitch_count$ - %i(1))
	:i if (~$hide_glitch_count$ = %i(0))
		:i $StartRendering$${StructQBKey reason = hide_glitch}$
	:i endif
	:i endfunction]