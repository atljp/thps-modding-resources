<?xml version="1.0" encoding="utf-8" ?>
<Language Name="Q" Startblock="Q Code">
  <FileTypes>
    <FileType Extension=".q" Name="Q Source"/>
  </FileTypes>

  <Block Name="Q Code" Style="Q Code" PatternStyle="Q Keyword" EscapeChar="" IsMultiline="true">

    <!-- Keywords that can exist inside this block -->
    <Keywords>
      <PatternGroup Name="Keywords" Style="Q Keyword">
        <Patterns>
          case:
          break:
          else
          exitloop
        </Patterns>
      </PatternGroup>
      <PatternGroup Name="Constants" Style="Q Constant">
        <Patterns>
          printf
        </Patterns>
      </PatternGroup>
      <PatternGroup Name="Numbers" Style="Q Number">
      </PatternGroup>

      <PatternGroup Name="Script Key" Style="Q Script Key">
        <Pattern Text="(\#[0-9a-fA-F]{6})" IsComplex="true" />
      </PatternGroup>
      
      <!-- Datatypes for c# -->
      <PatternGroup Name="DataTypes" Style="Q Datatype" CaseSensitive="true">
        <Pattern Text="(?:^|\s)(int\:)-?[0-9]{1,10}(?:$|\s)" IsComplex="true" />
        <Pattern Text="(?:^|\s)(float\:)-?[0-9]+(\.?[0-9]+)?(?:$|\s)" IsComplex="true" />
        <Pattern Text="(?:^|\s)(pair\:)-?[0-9]+(\.?[0-9]+)?\,-?[0-9]+(\.?[0-9]+)?(?:$|\s)" IsComplex="true" />
        <Pattern Text="(?:^|\s)(vector\:)-?[0-9]+(\.?[0-9]+)?\,-?[0-9]+(\.?[0-9]+)?\,-?[0-9]+(\.?[0-9]+)?(?:$|\s)" IsComplex="true" />
      </PatternGroup>
    </Keywords>
    <!-- Operators that can exist inside this block -->
    <Operators>
      <PatternGroup name="Operators" Style="Q Operator">
        <Pattern Text="." />
        <Pattern Text="!" />
        <Pattern Text=":" />
        <Pattern Text="->" />
        <Pattern Text="*" />
        <Pattern Text="/" />
        <Pattern Text="+" />
        <Pattern Text="-" />
        <Pattern Text="=" />
        <Pattern Text="(" />
        <Pattern Text=")" />
        <Pattern Text="&gt;" />
        <Pattern Text="&lt;" />

      </PatternGroup>
    </Operators>
    <!-- Blocks that can exist inside this block -->
    <ChildBlocks>
      <Child Name="Q Singleline Comment" />
      <Child Name="Q String" />
      <Child Name="Q Sub" />
      <Child Name="Q Script" />
    </ChildBlocks>
  </Block>

  <Block Name="Q Sub" Style="Q Code" PatternStyle="Q Keyword" EscapeChar="" IsMultiline="true">

    <Scope Start="[" End="]"  EndIsSeparator="true"	Style="Q Code" Text="Struct *** ..." CauseIndent="true"/>
    <Scope Start="{" End="}"  EndIsSeparator="true"	Style="Q Code" Text="Array *** ..." CauseIndent="true"/>
    <Scope Start="(?:^|\s)(if)(?:$|\s)" End="(?:^|\s)(endif)(?:$|\s)" StartIsComplex="true" EndIsComplex="true"     EndIsSeparator="true"	Style="Q Keyword" Text="Script *** ..." CauseIndent="true"/>
    <Scope Start="(?:^|\s)(loop)(?:$|\s)" End="(?:^|\s)(endloop)(?:$|\s)" StartIsComplex="true" EndIsComplex="true"     EndIsSeparator="true"	Style="Q Keyword" Text="Script *** ..." CauseIndent="true"/>
    <Scope Start="(?:^|\s)(switch:)(?:$|\s)" End="(?:^|\s)(endswitch)(?:$|\s)" StartIsComplex="true" EndIsComplex="true"     EndIsSeparator="true"	Style="Q Keyword" Text="Script *** ..." CauseIndent="true"/>


    <!-- Keywords that can exist inside this block -->
    <Keywords>
      <PatternGroup Name="Keywords" Style="Q Keyword">
        <Patterns>
          exitloop
          case:
          else
          break:
        </Patterns>
      </PatternGroup>
      <PatternGroup Name="Constants" Style="Q Constant">
        <Patterns>
          printf
        </Patterns>
      </PatternGroup>
      <PatternGroup Name="Numbers" Style="Q Number">
      </PatternGroup>

      <PatternGroup Name="Script Key" Style="Q Script Key">
        <Pattern Text="(\#[0-9a-fA-F]{6})" IsComplex="true" />
      </PatternGroup>
      
      <!-- Datatypes for c# -->
      <PatternGroup Name="DataTypes" Style="Q Datatype" CaseSensitive="true">
        <Pattern Text="(?:^|\s)(int\:)-?[0-9]{1,10}(?:^|\s)" IsComplex="true" />
        <Pattern Text="(?:^|\s)(float\:)-?[0-9]+(\.?[0-9]+)?(?:$|\s)" IsComplex="true" />
        <Pattern Text="(?:^|\s)(pair\:)-?[0-9]+(\.?[0-9]+)?\,-?[0-9]+(\.?[0-9]+)?(?:$|\s)" IsComplex="true" />
        <Pattern Text="(?:^|\s)(vector\:)-?[0-9]+(\.?[0-9]+)?\,-?[0-9]+(\.?[0-9]+)?\,-?[0-9]+(\.?[0-9]+)?(?:$|\s)" IsComplex="true" />
      </PatternGroup>
    </Keywords>
    <!-- Operators that can exist inside this block -->
    <Operators>
      <PatternGroup name="Operators" Style="Q Operator">
        <Pattern Text="." />
        <Pattern Text="!" />
        <Pattern Text=":" />
        <Pattern Text="->" />
        <Pattern Text="*" />
        <Pattern Text="/" />
        <Pattern Text="+" />
        <Pattern Text="-" />
        <Pattern Text="=" />
        <Pattern Text="(" />
        <Pattern Text=")" />
        <Pattern Text="&gt;" />
        <Pattern Text="&lt;" />

      </PatternGroup>
    </Operators>
    <!-- Blocks that can exist inside this block -->
    <ChildBlocks>
      <Child Name="Q Singleline Comment" />
      <Child Name="Q String" />
      <Child Name="Q Sub" />
      <Child Name="Q Script" />
    </ChildBlocks>
  </Block>

  <Block Name="Q Script" Style="Q Code" PatternStyle="Q Keyword" EscapeChar="" IsMultiline="true">
    <Scope Start="(?:^|\s)(script)(?:$|\s)" End="(?:^|\s)(endscript)(?:$|\s)" StartIsComplex="true" EndIsComplex="true"     EndIsSeparator="true"	Style="Q Keyword" Text="Script *** ..." CauseIndent="true"/>

    <!-- Keywords that can exist inside this block -->
    <Keywords>
      <PatternGroup Name="Keywords" Style="Q Keyword">
        <Patterns>
          case:
          break:
          else
          exitloop
        </Patterns>
      </PatternGroup>
      <PatternGroup Name="Constants" Style="Q Constant">
        <Patterns>
          printf
        </Patterns>
      </PatternGroup>
      <PatternGroup Name="Numbers" Style="Q Number">
      </PatternGroup>

      <PatternGroup Name="Script Key" Style="Q Script Key">
        <Pattern Text="(\#[0-9a-fA-F]{6})" IsComplex="true" />
      </PatternGroup>
      <!-- Datatypes for c# -->
      <PatternGroup Name="DataTypes" Style="Q Datatype" CaseSensitive="true">
        <Pattern Text="(?:^|\s)(int\:)-?[0-9]{1,10}(?:$|\s)" IsComplex="true" />
        <Pattern Text="(?:^|\s)(float\:)-?[0-9]+(\.?[0-9]+)?(?:$|\s)" IsComplex="true" />
        <Pattern Text="(?:^|\s)(pair\:)-?[0-9]+(\.?[0-9]+)?\,-?[0-9]+(\.?[0-9]+)?(?:$|\s)" IsComplex="true" />
        <Pattern Text="(?:^|\s)(vector\:)-?[0-9]+(\.?[0-9]+)?\,-?[0-9]+(\.?[0-9]+)?\,-?[0-9]+(\.?[0-9]+)?(?:$|\s)" IsComplex="true" />
      </PatternGroup>
    </Keywords>
    <!-- Operators that can exist inside this block -->
    <Operators>
      <PatternGroup name="Operators" Style="Q Operator">
        <Pattern Text="." />
        <Pattern Text="!" />
        <Pattern Text=":" />
        <Pattern Text="->" />
        <Pattern Text="*" />
        <Pattern Text="/" />
        <Pattern Text="+" />
        <Pattern Text="-" />
        <Pattern Text="=" />
        <Pattern Text="(" />
        <Pattern Text=")" />
        <Pattern Text="&gt;" />
        <Pattern Text="&lt;" />

      </PatternGroup>
    </Operators>
    <!-- Blocks that can exist inside this block -->
    <ChildBlocks>
      <Child Name="Q Singleline Comment" />
      <Child Name="Q String" />
      <Child Name="Q Sub" />
    </ChildBlocks>
  </Block>
  
  <Block Name="Q Singleline Comment" Style="Q Comment" PatternStyle="" EscapeChar="" IsMultiline="false">
    <Scope Start="//" End="" 	Style="Q Comment"  Text="" />
  </Block>

  <Block Name="Q String" Style="Q String" PatternStyle="" IsMultiline="false">
    <Scope Start="&quot;" End="&quot;" 	Style="Q String"  Text="" />
    <Scope Start="&#39;" End="&#39;" 	Style="Q CharString"  Text="" />
  </Block>

  <Style Name="Q Code" ForeColor="" BackColor="" Bold="false" Italic="false" Underline="false" />
  <Style Name="Q Constant" ForeColor="DarkGreen" BackColor="" Bold="false" Italic="false" Underline="false" />
  <Style Name="Q Code Pattern" ForeColor="" BackColor="" Bold="true" Italic="false" Underline="false" />
  <Style Name="Q Comment" ForeColor="Green" BackColor="" Bold="false" Italic="false" Underline="false" />
  <Style Name="Q String" ForeColor="Gray" BackColor="" Bold="false" Italic="false" Underline="false" />
  <Style Name="Q CharString" ForeColor="Gray" BackColor="" Bold="true" Italic="false" Underline="false" />
  <Style Name="Q Operator" ForeColor="Red" BackColor="" Bold="false" Italic="false" Underline="false" />
  <Style Name="Q Keyword" ForeColor="Blue" BackColor="" Bold="true" Italic="false" Underline="false" />
  <Style Name="Q Datatype" ForeColor="DarkBlue" BackColor="" Bold="false" Italic="false" Underline="false" />
  <Style Name="Q Script Key" ForeColor="" BackColor="LightGray" Bold="false" Italic="false" Underline="false" />
</Language>